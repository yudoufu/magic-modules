<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Getting Started on Magic Modules</title><link>https://googlecloudplatform.github.io/magic-modules/docs/getting-started/</link><description>Recent content in Getting Started on Magic Modules</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://googlecloudplatform.github.io/magic-modules/docs/getting-started/index.xml" rel="self" type="application/rss+xml"/><item><title>Set up your environment</title><link>https://googlecloudplatform.github.io/magic-modules/docs/getting-started/setup/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://googlecloudplatform.github.io/magic-modules/docs/getting-started/setup/</guid><description>Set up your environment # Cloning Terraform providers # If you&amp;rsquo;re generating the Terraform providers (google and google-beta), you&amp;rsquo;ll need to check out the repo(s) you&amp;rsquo;re generating in your GOPATH. For example:
git clone https://github.com/hashicorp/terraform-provider-google.git $GOPATH/src/github.com/hashicorp/terraform-provider-google git clone https://github.com/hashicorp/terraform-provider-google-beta.git $GOPATH/src/github.com/hashicorp/terraform-provider-google-beta Or run the following to check them all out:
./scripts/bootstrap Magic Modules won&amp;rsquo;t work with old versions of the Terraform provider repos. If you&amp;rsquo;re encountering issues with vendoring and paths, make sure both MM and the Terraform provider are running on up to date copies of main.</description></item><item><title>Generate the providers</title><link>https://googlecloudplatform.github.io/magic-modules/docs/getting-started/generate-providers/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://googlecloudplatform.github.io/magic-modules/docs/getting-started/generate-providers/</guid><description>Generate the provider # You can compile the Terraform provider you&amp;rsquo;re working on using make or make provider in the magic-modules directory. Below you&amp;rsquo;ll find a command reference, sample commands, and instructions on how to clean up the repository.
make provider reference # make or make provider will build the terraform provider. The following are variables set either as environment or inline when calling make. They will inform the generator where and how to generate.</description></item><item><title>Run provider tests</title><link>https://googlecloudplatform.github.io/magic-modules/docs/getting-started/run-provider-tests/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://googlecloudplatform.github.io/magic-modules/docs/getting-started/run-provider-tests/</guid><description>Run provider tests locally # Note: If you want to test changes you&amp;rsquo;ve made in Magic Modules, you need to first generate the provider you want to test. Setup # Authentication is described in more detail here.
Tests generally assume the following environment variables must be set in order to run tests:
GOOGLE_PROJECT GOOGLE_CREDENTIALS|GOOGLE_CLOUD_KEYFILE_JSON|GCLOUD_KEYFILE_JSON|GOOGLE_USE_DEFAULT_CREDENTIALS GOOGLE_REGION GOOGLE_ZONE Note that the credentials you provide must be granted wide permissions on the specified project.</description></item><item><title>Use built provider</title><link>https://googlecloudplatform.github.io/magic-modules/docs/getting-started/use-built-provider/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://googlecloudplatform.github.io/magic-modules/docs/getting-started/use-built-provider/</guid><description>Use built provider locally # Note: If you want to test changes you&amp;rsquo;ve made in Magic Modules, you need to first generate the provider you want to test. Sometimes, for example for manual testing, you may want to build the provider from source and use it with terraform.
Developer Overrides # Note: Developer overrides are only available in Terraform v0.14 and later. By default Terraform will download providers from the public Registry, but there are several ways to override this behaviour and use providers from other sources.</description></item><item><title>Contributing</title><link>https://googlecloudplatform.github.io/magic-modules/docs/getting-started/contributing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://googlecloudplatform.github.io/magic-modules/docs/getting-started/contributing/</guid><description>General contributing steps # If you haven&amp;rsquo;t done so already, fork the Magic Modules repository into your GitHub account.
Check the issue tracker to see whether your feature has already been requested.
If there&amp;rsquo;s an issue and it already has a dedicated assignee, this indicates that someone might have already started to work on a solution. Otherwise, you&amp;rsquo;re welcome to work on the issue. Check whether the resource you would like to work on already exists in the following places:</description></item><item><title>Provider documentation</title><link>https://googlecloudplatform.github.io/magic-modules/docs/getting-started/provider-documentation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://googlecloudplatform.github.io/magic-modules/docs/getting-started/provider-documentation/</guid><description>Provider documentation # The provider is documented on HashiCorp&amp;rsquo;s Terraform Registry, which includes information about individual resources and datasources, and includes guides to help users configure or upgrade the provider in their projects.
This document includes details about how provider documentation is used by the Terraform Registry, how it is made in the Magic Modules repo, and tools you can use when editing documentation.
There are other pages under How To that describe how to approach making additions to the documentation.</description></item></channel></rss>