<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Home on Magic Modules</title><link>https://googlecloudplatform.github.io/magic-modules/</link><description>Recent content in Home on Magic Modules</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 14 Nov 2022 09:50:49 -0800</lastBuildDate><atom:link href="https://googlecloudplatform.github.io/magic-modules/index.xml" rel="self" type="application/rss+xml"/><item><title>Types of resources</title><link>https://googlecloudplatform.github.io/magic-modules/docs/how-to/types-of-resources/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://googlecloudplatform.github.io/magic-modules/docs/how-to/types-of-resources/</guid><description>Check the header in the Go source to determine what type of resource it is. If there is no header, it is likely handwritten.</description></item><item><title>Add an MMv1 resource</title><link>https://googlecloudplatform.github.io/magic-modules/docs/how-to/add-mmv1-resource/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://googlecloudplatform.github.io/magic-modules/docs/how-to/add-mmv1-resource/</guid><description>Generated resources are created using the &lt;code>mmv1&lt;/code> code generator, and are configured by editing definition files under the &lt;a href="https://github.com/GoogleCloudPlatform/magic-modules/tree/master/mmv1/products">&lt;code>mmv1/products&lt;/code>&lt;/a> path.</description></item><item><title>Set up your environment</title><link>https://googlecloudplatform.github.io/magic-modules/docs/getting-started/setup/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://googlecloudplatform.github.io/magic-modules/docs/getting-started/setup/</guid><description>Set up your environment # Cloning Terraform providers # If you&amp;rsquo;re generating the Terraform providers (google and google-beta), you&amp;rsquo;ll need to check out the repo(s) you&amp;rsquo;re generating in your GOPATH. For example:
git clone https://github.com/hashicorp/terraform-provider-google.git $GOPATH/src/github.com/hashicorp/terraform-provider-google git clone https://github.com/hashicorp/terraform-provider-google-beta.git $GOPATH/src/github.com/hashicorp/terraform-provider-google-beta Or run the following to check them all out:
./tools/bootstrap Magic Modules won&amp;rsquo;t work with old versions of the Terraform provider repos. If you&amp;rsquo;re encountering issues with vendoring and paths, make sure both MM and the Terraform provider are running on up to date copies of main.</description></item><item><title>Add MMv1 IAM resources</title><link>https://googlecloudplatform.github.io/magic-modules/docs/how-to/add-mmv1-iam/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://googlecloudplatform.github.io/magic-modules/docs/how-to/add-mmv1-iam/</guid><description>For resources implemented through the MMv1 engine, the majority of configuration for IAM support can be inferred based on the preexisting YAML specification file.</description></item><item><title>Add an MMv1 test</title><link>https://googlecloudplatform.github.io/magic-modules/docs/how-to/add-mmv1-test/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://googlecloudplatform.github.io/magic-modules/docs/how-to/add-mmv1-test/</guid><description>An example terraform configuration can be used to generate docs and tests for a resource.</description></item><item><title>Generate the providers</title><link>https://googlecloudplatform.github.io/magic-modules/docs/getting-started/generate-providers/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://googlecloudplatform.github.io/magic-modules/docs/getting-started/generate-providers/</guid><description>Generate the providers # You can compile the Terraform provider you&amp;rsquo;re working on by running the following commands from the root directory of the repository. OUTPUT_PATH should be set to the location of your provider repository, which is recommended to be inside your GOPATH.
cd magic-modules make terraform VERSION=ga OUTPUT_PATH=&amp;#34;$GOPATH/src/github.com/hashicorp/terraform-provider-google&amp;#34; make terraform VERSION=beta OUTPUT_PATH=&amp;#34;$GOPATH/src/github.com/hashicorp/terraform-provider-google-beta&amp;#34; # Only generate a specific product (plus all common files) make terraform VERSION=ga OUTPUT_PATH=&amp;#34;$GOPATH/src/github.com/hashicorp/terraform-provider-google&amp;#34; PRODUCT=pubsub # Only generate only a specific resources for a product make terraform VERSION=ga OUTPUT_PATH=&amp;#34;$GOPATH/src/github.</description></item><item><title>Update a handwritten resource</title><link>https://googlecloudplatform.github.io/magic-modules/docs/how-to/update-handwritten-resource/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://googlecloudplatform.github.io/magic-modules/docs/how-to/update-handwritten-resource/</guid><description>The Google providers for Terraform have a large number of handwritten go files, primarily for resources written before Magic Modules was used with them. Most handwritten files are expected to stay handwritten indefinitely, although conversion to a generator may be possible for a limited subset of them.</description></item><item><title>Add a handwritten test</title><link>https://googlecloudplatform.github.io/magic-modules/docs/how-to/add-handwritten-test/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://googlecloudplatform.github.io/magic-modules/docs/how-to/add-handwritten-test/</guid><description>For handwritten resources and generated resources that need to test update, handwritten tests must be added.</description></item><item><title>Add a handwritten datasource</title><link>https://googlecloudplatform.github.io/magic-modules/docs/how-to/add-handwritten-datasource/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://googlecloudplatform.github.io/magic-modules/docs/how-to/add-handwritten-datasource/</guid><description>Datasources are like terraform resources except they don&amp;rsquo;t &lt;em>create&lt;/em> anything.</description></item><item><title>Add handwritten IAM resources</title><link>https://googlecloudplatform.github.io/magic-modules/docs/how-to/add-handwritten-iam/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://googlecloudplatform.github.io/magic-modules/docs/how-to/add-handwritten-iam/</guid><description>Handwritten IAM support is only recommended for resources that cannot be managed using &lt;a href="https://googlecloudplatform.github.io/magic-modules/magic-modules/docs/how-to/add-mmv1-iam">MMv1&lt;/a>.</description></item><item><title>Run provider tests</title><link>https://googlecloudplatform.github.io/magic-modules/docs/getting-started/run-provider-tests/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://googlecloudplatform.github.io/magic-modules/docs/getting-started/run-provider-tests/</guid><description>Run provider tests locally # Note: If you want to test changes you&amp;rsquo;ve made in Magic Modules, you need to first generate the provider you want to test. Setup # Tests generally assume the following environment variables must be set in order to run tests:
GOOGLE_PROJECT GOOGLE_CREDENTIALS|GOOGLE_CLOUD_KEYFILE_JSON|GCLOUD_KEYFILE_JSON|GOOGLE_USE_DEFAULT_CREDENTIALS GOOGLE_REGION GOOGLE_ZONE Note that the credentials you provide must be granted wide permissions on the specified project. These tests provision real resources, and require permission in order to do so.</description></item><item><title>Use built provider</title><link>https://googlecloudplatform.github.io/magic-modules/docs/getting-started/use-built-provider/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://googlecloudplatform.github.io/magic-modules/docs/getting-started/use-built-provider/</guid><description>Use built provider locally # Note: If you want to test changes you&amp;rsquo;ve made in Magic Modules, you need to first generate the provider you want to test. Sometimes, for example for manual testing, you may want to build the provider from source and use it with terraform.
Setup # Choose your architecture below.
Mac ARM64 mkdir -p ~/.terraform.d/plugins/registry.terraform.io/hashicorp/google/9.0.0/darwin_arm64 mkdir -p ~/.terraform.d/plugins/registry.terraform.io/hashicorp/google-beta/9.0.0/darwin_arm64 ln -s $GOPATH/bin/terraform-provider-google ~/.terraform.d/plugins/registry.terraform.io/hashicorp/google/9.0.0/darwin_arm64/terraform-provider-google_v9.0.0 ln -s $GOPATH/bin/terraform-provider-google-beta ~/.</description></item><item><title>Contributing</title><link>https://googlecloudplatform.github.io/magic-modules/docs/getting-started/contributing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://googlecloudplatform.github.io/magic-modules/docs/getting-started/contributing/</guid><description>General contributing steps # Fork Magic Modules repository into your GitHub account if you haven&amp;rsquo;t done before.
Check the issue tracker to see whether your feature has already been requested.
if there&amp;rsquo;s an issue and it&amp;rsquo;s already has a dedicated assignee, it indicates that someone may have already started to work on a solution. otherwise, you&amp;rsquo;re welcome to work on the issue. Check whether the resource you would like to work on already exists in the providers (google / google-beta or check the website).</description></item><item><title>api.yaml resource ↗</title><link>https://googlecloudplatform.github.io/magic-modules/docs/reference/api-yaml-resource/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://googlecloudplatform.github.io/magic-modules/docs/reference/api-yaml-resource/</guid><description>FORCE MENU RENDER</description></item><item><title>terraform.yaml resource ↗</title><link>https://googlecloudplatform.github.io/magic-modules/docs/reference/terraform-yaml-resource/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://googlecloudplatform.github.io/magic-modules/docs/reference/terraform-yaml-resource/</guid><description>FORCE MENU RENDER</description></item></channel></rss>